source('C:/Users/aljul_000/Dropbox/Quicken_Verification/2_scripts/aggDataTidying.R')
source('C:/Users/aljul_000/Dropbox/Quicken_Verification/2_scripts/reconcileQuicken.R')
source('C:/Users/aljul_000/Dropbox/Quicken_Verification/2_scripts/reconcileReport.R')
source('C:/Users/aljul_000/Dropbox/Quicken_Verification/2_scripts/taxDataTidying.R')
setwd("C:/Users/aljul_000/Dropbox/Quicken_Verification/")
reconcileQuicken()
aggDataTidying()
taxDataTidying()
reconcileReport()
rm(aggQuick, aggUsaa, taxQuick, taxUsaa, badSym, Cost, curDir, goodSym)
reconcileQuicken()
aggDataTidying()
taxDataTidying()
reconcileReport()
rm(aggQuick, aggUsaa, taxQuick, taxUsaa, badSym, Cost, curDir, goodSym)
reconcileQuicken()
aggDataTidying()
taxDataTidying()
reconcileReport()
Q(0)
q(0)
# import and clean broker investment account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files())
datbi <- datbi[, c(1, 3, 7, 8)]
# import and clean broker roth account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_roth")
datbr <- read.csv(list.files())
datbr <- datbr[, c(1, 3, 7, 8)]
broker_position <- rbind.data.frame(datbi, datbr)
# remove whitespaces, dollar signs, and commas from dataframe
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub('\\s+', '', x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\$", "", x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\,", "", x)))
# THIS IS THE PROBLEM AREA WHERE I STOPPED create unique key
# the market value and GL are factors, need to strip
key <- paste(broker_position$Security.ID,
as.numeric(as.character(broker_position$Recent.Qty)))
View(datbi); View(datbr)
View(broker_position)
trialthis <- rbind(datbr, datbi)
View(trialthis)
trialthis2 < rbind.data.frame(datbr, datbi)
trialthis2 <- rbind.data.frame(datbr, datbi)
View(trialthis2)
source('~/Github/Quicken/3-broker_importNEW.R')
rm(broker_position, datbi, datbr, trialthis, trialthis2)
rm(key)
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files())
datbi <- datbi[, c(1, 3, 7, 8)]
# import and clean broker roth account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_roth")
datbr <- read.csv(list.files())
datbr <- datbr[, c(1, 3, 7, 8)]
broker_position <- rbind.data.frame(datbr, datbi)
View(datbi, datbr, broker_position)
View(broker_position)
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub('\\s+', '', x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\$", "", x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\,", "", x)))
key <- paste(broker_position$Security.ID,
as.numeric(as.character(broker_position$Recent.Qty)))
key <- paste(broker_position$Security.ID, "next")
key <- paste(broker_position$Symbol, "next")
as.character(broker_position$Quantity)
as.numeric(as.character(broker_position$Quantity))
key <- paste(broker_position$Symbol,
as.numeric(as.character(broker_position$Quantity)))
key
broker_position$Market.Value
broker_position$Market.Value[1]
broker_position$Estimated.Gain.Loss[1]
broker_position$Market.Value[2]
broker_position$Estimated.Gain.Loss[2]
broker_position$Market.Value[2] - broker_position$Estimated.Gain.Loss[2]
as.numeric(as.character(broker_position$Market.Value[2]))
as.numeric(as.character(broker_position$Estimated.Gain.Loss[2]))
as.numeric(as.character(broker_position$Market.Value[2])) - as.numeric(as.character(broker_position$Estimated.Gain.Loss[2]))
source('~/Github/Quicken/3-broker_importNEW.R')
source('~/Github/Quicken/3-broker_importNEW.R')
rm(broker_position, datbi, datbr)
# import and clean broker investment account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files())
datbi <- datbi[, c(1, 3, 7, 8)]
# import and clean broker roth account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_roth")
datbr <- read.csv(list.files())
datbr <- datbr[, c(1, 3, 7, 8)]
broker_position <- rbind.data.frame(datbr, datbi)
# remove whitespaces, dollar signs, and commas from dataframe
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub('\\s+', '', x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\$", "", x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\,", "", x)))
# create unique key
cleancost <- as.numeric(as.character(broker_position$Market.Value))
- as.numeric(as.character(broker_position$Estimated.Gain.Loss))
key <- paste(broker_position$Symbol,
as.numeric(as.character(broker_position$Quantity)),
cleancost)
# update column names
colnames(broker_position) <- c("broker.symbol",
"broker.shares",
"broker.cost")
# create dataframe with unique key
broker_position <<- cbind.data.frame(broker_position, key)
rm(broker_position, datbi, datbr, cleancost, key)
# import and clean broker investment account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files())
datbi <- datbi[, c(1, 3, 7, 8)]
# import and clean broker roth account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_roth")
datbr <- read.csv(list.files())
datbr <- datbr[, c(1, 3, 7, 8)]
View(datbr, datbi)
View(datbr); View(datbi)
broker_position <- rbind.data.frame(datbr, datbi)
View(broker_position)
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub('\\s+', '', x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\$", "", x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\,", "", x)))
cleancost <- as.numeric(as.character(broker_position$Market.Value))
- as.numeric(as.character(broker_position$Estimated.Gain.Loss))
cleancost <- as.numeric(as.character(broker_position$Market.Value)) - as.numeric(as.character(broker_position$Estimated.Gain.Loss))
key <- paste(broker_position$Symbol,
as.numeric(as.character(broker_position$Quantity)),
cleancost)
View(broker_position)
colnames(broker_position) <- c("broker.symbol",
"broker.shares",
"broker.gainloss",
"broker.marketvalue")
broker_position <<- cbind.data.frame(broker_position, key)
source('~/Github/Quicken/3-broker_importNEW.R')
rm(broker_position, datbi, datbr, cleancost, key)
# import and clean broker investment account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files())
datbi <- datbi[, c(1, 3, 7, 8)]
# import and clean broker roth account position information
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_roth")
datbr <- read.csv(list.files())
datbr <- datbr[, c(1, 3, 7, 8)]
broker_position <- rbind.data.frame(datbr, datbi)
# remove whitespaces, dollar signs, and commas from dataframe
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub('\\s+', '', x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\$", "", x)))
broker_position <- as.data.frame(apply(broker_position, 2,
function(x) gsub("\\,", "", x)))
# create unique key
cleancost <- as.numeric(as.character(broker_position$Market.Value))
- as.numeric(as.character(broker_position$Estimated.Gain.Loss))
key <- paste(broker_position$Symbol,
as.numeric(as.character(broker_position$Quantity)),
cleancost)
# update column names
colnames(broker_position) <- c("broker.symbol",
"broker.shares",
"broker.gainloss",
"broker.marketvalue")
# create dataframe with unique key
broker_position <<- cbind.data.frame(broker_position, key)
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/1-quicken_import.R')
source('~/Github/Quicken/2-quicken_import.R')
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/4-broker_import.R')
source('~/Github/Quicken/1-quicken_import.R')
source('~/Github/Quicken/2-quicken_import.R')
source('~/Github/Quicken/4-broker_import.R')
source('~/Github/Quicken/3-broker_import.R')
rm(broker_position, datbi, datbr, cleancost, key)
broker_import1()
broker_import2()
quicken_import1()
quicken_import2()
rm(quicken_position, quicken_taxlot)
View(broker_taxlot)
rm(list = ls())
source('~/Github/Quicken/1-quicken_import.R')
source('~/Github/Quicken/2-quicken_import.R')
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/4-broker_import.R')
broker_import1()
broker_import2()
quicken_import1()
quicken_import2()
View(broker_position)
View(broker_taxlot)
View(quicken_position)
View(quicken_taxlot)
source('~/Github/Quicken/1-quicken_import.R');source('~/Github/Quicken/2-quicken_import.R');source('~/Github/Quicken/3-broker_import.R');source('~/Github/Quicken/4-broker_import.R');broker_import1();broker_import2();quicken_import1();quicken_import2();View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot)
source('~/Github/Quicken/4-broker_import.R')
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/1-quicken_import.R')
source('~/Github/Quicken/2-quicken_import.R')
rm(list = ls())
source('~/Github/Quicken/1-quicken_import.R');source('~/Github/Quicken/2-quicken_import.R');source('~/Github/Quicken/3-broker_import.R');source('~/Github/Quicken/4-broker_import.R');broker_import1();broker_import2();quicken_import1();quicken_import2();View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot)
source('~/Github/Quicken/5-reconcile_positions.R')
reconcilePositions()
source('~/Github/Quicken/5-reconcile_positions.R')
reconcilePositions()
setwd("/Users/airvanilla/Github/Quicken/")
source('~/Github/Quicken/5-reconcile_positions.R')
source('~/Github/Quicken/5-reconcile_positions.R')
source('~/Github/Quicken/6-reconcile_taxlot.R')
source('~/Github/Quicken/6-reconcile_taxlot.R')
reconcile_taxlot()
source('~/Github/Quicken/6-reconcile_taxlot.R')
rm(reconcile_taxlot)
rm(reconcilePositions())
rm(reconcilePositions)
ls()
reconcile_taxlots()
source('~/Github/Quicken/6-reconcile_taxlot.R')
reconcile_taxlots()
source('~/Github/Quicken/6-reconcile_taxlot.R')
source('~/Github/Quicken/6-reconcile_taxlot.R')
source('~/Github/Quicken/5-reconcile_positions.R')
rm(list= ls())
source('~/Github/Quicken/1-quicken_import.R');source('~/Github/Quicken/2-quicken_import.R');source('~/Github/Quicken/3-broker_import.R');source('~/Github/Quicken/4-broker_import.R')
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots()
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots)
source('~/Github/Quicken/6-reconcile_taxlot.R')
source('~/Github/Quicken/5-reconcile_positions.R')
rm(list= ls())
source('~/Github/Quicken/1-quicken_import.R');source('~/Github/Quicken/2-quicken_import.R');source('~/Github/Quicken/3-broker_import.R');source('~/Github/Quicken/4-broker_import.R')
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots()
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots)
rm(list = ls())
source('~/Github/Quicken/6-reconcile_taxlots.R')
source('~/Github/Quicken/5-reconcile_positions.R')
rm(list = ls())
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
rm(list = ls())
q()
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
q()
rm(list = ls()
)
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
rm(broker_import2, quicken_import1, quicken_import2, reconcile_positions, reconcile_taxlots)
rm(broker_taxlot, compare_positions, compare_taxlots, quicken_taxlot)
key(broker_position$broker.symbol, broker_position$broker.shares)
key <- broker_position$broker.symbol, broker_position$broker.shares
key <- cbind(broker_position$broker.symbol, broker_position$broker.shares)
as.character(broker_position$broker.symbol)
as.character(broker_position$broker.shares)
key <- cbind.data.frame(as.character(broker_position$broker.symbol), as.character(broker_position$broker.shares))
View(key)
key <- paste(as.character(broker_position$broker.symbol), as.character(broker_position$broker.shares))
as.numeric(as.character(broker_position$broker.shares))
?read.csv
broker_import1()
View(broker_position)
as.numeric(as.character(broker_position$broker.shares))
cleancost <- as.numeric(as.character(broker_position$Market.Value))
- as.numeric(as.character(broker_position$Estimated.Gain.Loss))
cleancost <- as.numeric(broker_position$Market.Value) - as.numeric(broker_position$Estimated.Gain.Loss)
cleancost <- broker_position$broker.marketvalue - broker_position$broker.gainloss
mv <- as.numeric(broker_position$broker.marketvalue)
gl <- as.numeric(broker_position$broker.gainloss)
mv - gl
mv
typeof(mv)
broker_position$broker.marketvalue
source('~/Github/Quicken/3-broker_import.R')
rm(broker_position, cleancost, gl, key, mv)
broker_import1()
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/3-broker_import.R')
broker_import1()
View(broker_position)
broker_position$broker.marketvalue
typeof(broker_position$broker.marketvalue)
as.numeric(as.character(broker_position$broker.marketvalue))
mv <- as.numeric(as.character(broker_position$broker.marketvalue))
gl <- as.numeric(as.character(broker_position$broker.gainloss))
mv
gl
mv - gl
View(broker_position)
clean_cost> as.numeric(as.character(broker_position$broker.marketvalue)) -
as.numeric(as.character(broker_position$broker.gainloss))
clean_cost <- as.numeric(as.character(broker_position$broker.marketvalue)) -
as.numeric(as.character(broker_position$broker.gainloss))
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/3-broker_import.R')
setwd("/Users/airvanilla/Documents/Quicken/2_usaa_position_inv")
datbi <- read.csv(list.files(), stringsAsFactors = FALSE)
datbi <- datbi[, c(1, 3, 7, 8)]
View(datbi)
source('~/Github/Quicken/3-broker_import.R')
rm(broker_position, datbi, clean_cost, gl, mv)
broker_import1()
View(broker_position)
source('~/Github/Quicken/3-broker_import.R')
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
q()
View(broker_position)
View(quicken_position)
rm(list = ls())
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
broker_position[2, 5]
View(broker_import1)
View(broker_import1)
key <- paste(broker_position$Symbol,
as.numeric(as.character(broker_position$Quantity)),
(as.numeric(as.character(broker_position$Market.Value)) -
as.numeric(
as.character(broker_position$Estimated.Gain.Loss))))
as.numeric(as.character(broker_position$Market.Value) - as.numeric(as.character(broker_position$Estimated.Gain.Loss))
)
as.numeric(as.character(broker_position$broker.marketvalue) - as.numeric(as.character(broker_position$broker.gainloss)))
rm(list = ls())
q()
source('~/Github/Quicken/1-quicken_import.R');
source('~/Github/Quicken/2-quicken_import.R');
source('~/Github/Quicken/3-broker_import.R');
source('~/Github/Quicken/4-broker_import.R');
source('~/Github/Quicken/5-reconcile_positions.R');
source('~/Github/Quicken/6-reconcile_taxlots.R');
broker_import1();broker_import2();quicken_import1();quicken_import2();reconcile_positions();reconcile_positions();reconcile_taxlots();
View(broker_position);View(broker_taxlot);View(quicken_position);View(quicken_taxlot);View(compare_positions);View(compare_taxlots);
q()
getwd()
setwd("/Users/airvanilla/Github/Snippets")
ls()
dir
dir()
setwd("/Users/airvanilla/Github/reference")
getwd()
source('~/Github/reference/binary_operator.R')
"%div_minus_two%" <- function(left, right){
left / right - 2
}
12 %div_minus_two% 2
source('~/Github/reference/binary_operator.R')
rm(%p%)
rm("%p%")
source('~/Github/reference/binary_operator.R')
7 %% 4
remainder <- function(num, divisor = 2) {
rmdr <- num %% divisor
print(rmdr)
}
remainder(7, 3)
remainder(7, 2)
remainder(7, 4)
source('~/Github/reference/remainder.R')
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("cd ..")
setwd("..")
getwd()
source('~/Github/changewd.R')
source('~/Github/changewd.R')
source('~/Github/changewd.R')
source('~/Github/reference/binary_operator.R')
source('~/Github/reference/remainder.R')
source('~/Github/changewd.R')
source('~/Github/reference/changewd.R')
source('~/Github/reference/changewd.R')
source('~/Github/reference/remainder.R')
source('~/Github/reference/binary_operator.R')
source('~/Github/reference/binary_operator.R')
q()
